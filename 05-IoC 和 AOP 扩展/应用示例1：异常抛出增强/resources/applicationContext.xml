<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="userDao" class="cn.duozai.dao.UserDaoImpl"/>
    <bean id="userService" class="cn.duozai.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <!-- 声明增强方法所在的Bean，让Spring创建增强处理类对象，才能调用增强方法 -->
    <bean id="userServiceLogger" class="cn.duozai.aop.UserServiceLogger"/>

    <!-- <aop:config>标签：配置Spring AOP -->
    <aop:config>
        <!--
            <aop:pointcut>标签：定义切入点，指定让哪些方法做增强操作
            expression：使用execution指定切入点表达式
        -->
        <aop:pointcut id="pointcut" expression="execution(boolean save())"/>

        <!--
            <aop:aspect>标签：配置切面
            ref属性：引用包含增强方法的Bean，即增强处理类对象
            切面 = 切入点 + 增强处理
        -->
        <aop:aspect ref="userServiceLogger">
            <!--
                <aop:before>标签：定义前置增强，在方法开始执行前做额外操作
                method属性：指定增强方法
                pointcut-ref属性：引用切入点
                告知程序pointcut-ref方法在执行之前先执行userServiceLogger中的before方法
            -->
            <aop:before method="before" pointcut-ref="pointcut"/>

            <!--
                <aop:after-returning>标签：定义后置增强，在方法正常执行结束时做额外操作
                returning属性：指定为获取原有方法的返回值并传递给增强方法中的result参数
            -->
            <aop:after-returning method="afterReturning" pointcut-ref="pointcut" returning="result"/>

            <!--
                <aop:after-throwing>标签：定义异常抛出增强，在方法抛出异常时做额外操作
                throwing属性：指定为获取异常对象并传递给增强方法中的ex参数
            -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut" throwing="ex"/>
        </aop:aspect>
    </aop:config>

</beans>
